<?xml version="1.0" ?>
<sdf version="1.7"> 
<!-- Updated SDF version for better compatibility with Gz Harmonic, though 1.5 often works -->
  <model name="p_robot_platform_with_arm_base">
    <link name="chassis">
      <pose>0 0 0.15  0 0 0</pose>
      <inertial>
        <pose>0.1 0 0  0 0 0</pose> 
        <!-- Original chassis inertia shifted, consider recalculating combined inertia later -->
        <mass>10</mass> <!-- Original chassis mass -->
        <inertia>
          <ixx>0.21666666666666667</ixx>
          <iyy>0.8416666666666667</iyy>
          <izz>1.0416666666666667</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <box>
            <size>1.0 0.5 0.1</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>1.0 0.5 0.1</size>
          </box>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
        </material>
      </visual>
    </link>
    
    <link name="wheel_front_left">
      <pose>0.5 0.298 0.15  -1.5707963267948966 -0.08726646259971647 0</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0030791666666666667</ixx>
          <iyy>0.0030791666666666667</iyy>
          <izz>0.005625</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    
    <joint name="wheel_front_left_steer_spin" type="universal">
      <parent>chassis</parent>
      <child>wheel_front_left</child>
      <axis>
        <xyz expressed_in="__model__">0 -1 0</xyz> <!-- Steering axis -->
        <limit>
          <lower>-0.6108652381980153</lower>
          <upper>0.6108652381980153</upper>
        </limit>
      </axis>
      <axis2>
        <xyz expressed_in="__model__">0 0 1</xyz> <!-- Spin axis -->
      </axis2>
    </joint>
    
    <link name="wheel_front_right">
      <pose>0.5 -0.298 0.15  -1.5707963267948966 -0.08726646259971647 0</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0030791666666666667</ixx>
          <iyy>0.0030791666666666667</iyy>
          <izz>0.005625</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    
    <joint name="wheel_front_right_steer_spin" type="universal">
      <parent>chassis</parent>
      <child>wheel_front_right</child>
      <axis>
        <xyz expressed_in="__model__">0 -1 0</xyz> <!-- Steering axis -->
        <limit>
          <lower>-0.6108652381980153</lower>
          <upper>0.6108652381980153</upper>
        </limit>
      </axis>
      <axis2>
        <xyz expressed_in="__model__">0 0 1</xyz> <!-- Spin axis -->
      </axis2>
    </joint>
    
    
    <link name="wheel_rear_left">
      <pose>-0.5 0.298 0.15  -1.5707963267948966 0 0</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0030791666666666667</ixx>
          <iyy>0.0030791666666666667</iyy>
          <izz>0.005625</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    <joint name="wheel_rear_left_spin" type="revolute">
      <parent>chassis</parent>
      <child>wheel_rear_left</child>
      <axis>
        <xyz expressed_in="__model__">0 0 1</xyz>
      </axis>
    </joint>
    
    <link name="wheel_rear_right">
      <pose>-0.5 -0.298 0.15  -1.5707963267948966 0 0</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0030791666666666667</ixx>
          <iyy>0.0030791666666666667</iyy>
          <izz>0.005625</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.15</radius>
            <length>0.08</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    <joint name="wheel_rear_right_spin" type="revolute">
      <parent>chassis</parent>
      <child>wheel_rear_right</child>
      <axis>
        <xyz expressed_in="__model__">0 0 1</xyz>
      </axis>
    </joint>

    <!-- === ADDED UPPER STRUCTURE === -->
    <link name="cylindrical_body_link">
      <!-- Define link origin at its geometric center for a 1m tall cylinder -->
      <pose>0 0 0.35 0 0 0</pose> <!-- Pose of the CoM relative to the link's origin (which we place at its base center) -->
                                  <!-- Actually, let's place link origin at its base for simpler jointing -->
      <pose>0 0 0 0 0 0</pose> <!-- Link origin at the center of its base plane -->
      <inertial>
        <mass>100</mass>
        <!-- Inertia of a cylinder of radius r=0.25, height h=1.0, mass m=100 -->
        <!-- Ixx = Iyy = m/12 * (3*r^2 + h^2) = 100/12 * (3*0.25^2 + 1^2) = 100/12 * (0.1875 + 1) = 9.8958 -->
        <!-- Izz = 1/2 * m * r^2 = 0.5 * 100 * 0.25^2 = 3.125 -->
        <inertia>
          <ixx>9.896</ixx><ixy>0</ixy><ixz>0</ixz>
          <iyy>9.896</iyy><iyz>0</iyz>
          <izz>3.125</izz>
        </inertia>
        <pose>0 0 0.35 0 0 0</pose> <!-- Pose of the CoM relative to the link's origin (at base center) -->
      </inertial>
      <visual name="cyl_visual">
        <pose>0 0 0.35 0 0 0</pose> <!-- Visual center relative to link's origin (at base center) -->
        <geometry><cylinder><radius>0.25</radius><length>1.0</length></cylinder></geometry>
        <material><script><uri>file://media/materials/scripts/gazebo.material</uri><name>Gazebo/Orange</name></script></material>
      </visual>
      <collision name="cyl_collision">
        <pose>0 0 0.35 0 0 0</pose> <!-- Collision center relative to link's origin (at base center) -->
        <geometry><cylinder><radius>0.25</radius><length>1.0</length></cylinder></geometry>
      </collision>
    </link>
    <joint name="cylindrical_body_joint" type="fixed">
      <parent>chassis</parent>
      <child>cylindrical_body_link</child>
      <!-- Chassis origin Z=0.15 (world), chassis top surface is at Z=0.05 relative to chassis origin -->
      <!-- Place cylindrical_body_link's origin (its base center) onto the chassis top surface center -->
      <pose>0 0 0.05 0 0 0</pose> <!-- Relative to chassis frame, places child's origin -->
    </joint>

    <link name="rotating_turntable_link">
      <!-- Cylindrical_body_link's origin is at its base. Its top surface is at Z=1.0 relative to its origin. -->
      <!-- Turntable (0.05m thick) base sits on cylindrical_body_link's top. -->
      <!-- Turntable origin at its base center. -->
      <pose>0 0 1.2 0 0 0</pose> <!-- Link origin at its base center -->
      <inertial>
        <mass>10</mass>
        <!-- Inertia for a disk r=0.25, h=0.05, m=10 -->
        <!-- Ixx = Iyy = m/12 * (3*r^2 + h^2) = 10/12 * (3*0.25^2 + 0.05^2) = 0.1583 -->
        <!-- Izz = 1/2 * m * r^2 = 0.5 * 10 * 0.25^2 = 0.3125 -->
        <inertia>
          <ixx>0.158</ixx><ixy>0</ixy><ixz>0</ixz>
          <iyy>0.158</iyy><iyz>0</iyz>
          <izz>0.3125</izz>
        </inertia>
        <pose>0 0 0.025 0 0 0</pose> <!-- CoM relative to link's origin (at base center) -->
      </inertial>
      <visual name="turntable_visual">
        <pose>0 0 0.025 0 0 0</pose> <!-- Visual center relative to link's origin (at base center) -->
        <geometry><cylinder><radius>0.25</radius><length>0.05</length></cylinder></geometry>
        <material><script><uri>file://media/materials/scripts/gazebo.material</uri><name>Gazebo/Grey</name></script></material>
      </visual>
      <collision name="turntable_collision">
        <pose>0 0 0.025 0 0 0</pose> <!-- Collision center relative to link's origin (at base center) -->
        <geometry><cylinder><radius>0.25</radius><length>0.05</length></cylinder></geometry>
      </collision>
    </link>
    <joint name="turntable_joint" type="revolute">
      <parent>cylindrical_body_link</parent> 
      <child>rotating_turntable_link</child>
      <!-- Place turntable_link's origin (its base) on top of cylindrical_body_link (at Z=1.0 from cyl_body_link's origin) -->
      <pose>0 0 1.2 0 0 0</pose> <!-- Relative to cylindrical_body_link frame -->
      <axis>
        <xyz>0 0 1</xyz>
        <limit><lower>0</lower><upper>6.28318</upper></limit>
      </axis>
    </joint>

    <link name="vision_mast_link">
      <!-- Vision mast (0.3m tall), origin at its base center -->
      <pose>0 0.1 1.25 0 0 0 </pose> <!-- Relative to rotating_turntable_link (Y offset, base on turntable) -->
      <inertial>
        <mass>5</mass>
        <inertia><ixx>0.1</ixx><ixy>0</ixy><ixz>0</ixz><iyy>0.1</iyy><iyz>0</iyz><izz>0.1</izz></inertia> <!-- Placeholder -->
        <pose>0 0 0.15 0 0 0</pose> <!-- CoM relative to link's origin (at base center) -->
      </inertial>
      <visual name="vision_mast_visual">
        <pose>0 0 0.15 0 0 0</pose> <!-- Visual center relative to link's origin (at base center) -->
        <geometry><box><size>0.05 0.05 0.3</size></box></geometry>
        <material><script><uri>file://media/materials/scripts/gazebo.material</uri><name>Gazebo/Blue</name></script></material>
      </visual>
      <collision name="vision_mast_collision">
        <pose>0 0 0.15 0 0 0</pose> <!-- Collision center relative to link's origin (at base center) -->
        <geometry><box><size>0.05 0.05 0.3</size></box></geometry>
      </collision>
      <sensor name="camera" type="camera">
        <pose>0 0 0.15 0 0 0</pose> <!-- On top of the mast, relative to vision_mast_link -->
        <camera name="head_camera">
            <horizontal_fov>1.39626</horizontal_fov>
            <image><width>800</width><height>800</height><format>R8G8B8</format></image>
            <clip><near>0.02</near><far>300</far></clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
        <!-- Removed incompatible libgazebo_ros_camera.so plugin -->
        <!-- For Gz Harmonic, use ros_gz_bridge or Gz-native ROS 2 publishing -->
      </sensor>
    </link>
    <joint name="vision_mast_joint" type="fixed">
      <parent>rotating_turntable_link</parent>
      <child>vision_mast_link</child>
      <pose>0 0 0 0 0 0</pose> <!-- Relative pose of child wrt parent joint frame -->
    </joint>

    <link name="arm_base_mount">
      <!-- Arm base mount, origin at its geometric center, sitting on turntable -->
      <pose>0 -0.1 1.25 0 0 0 </pose> <!-- Relative to rotating_turntable_link (Y offset, base on turntable) -->
      <inertial>
        <mass>1</mass>
        <inertia><ixx>0.01</ixx><ixy>0</ixy><ixz>0</ixz><iyy>0.01</iyy><iyz>0</iyz><izz>0.01</izz></inertia>
        <!-- Assuming a small box or plate, CoM at origin if origin is geometric center -->
        <pose>0 0 0 0 0 0</pose> 
      </inertial>
      <!-- Add a visual for arm_base_mount for clarity, e.g., a small cylinder or box -->
      <visual name="arm_base_mount_visual">
        <pose>0 0 0.0125 0 0 0</pose> <!-- Example: a small cylinder 0.025m high -->
        <geometry><cylinder><radius>0.1</radius><length>0.025</length></cylinder></geometry>
        <material><script><uri>file://media/materials/scripts/gazebo.material</uri><name>Gazebo/Red</name></script></material>
      </visual>
      <collision name="arm_base_mount_collision">
        <pose>0 0 0.0125 0 0 0</pose>
        <geometry><cylinder><radius>0.1</radius><length>0.025</length></cylinder></geometry>
      </collision>
    </link>
    <joint name="arm_base_mount_joint" type="fixed">
      <parent>rotating_turntable_link</parent>
      <child>arm_base_mount</child>
      <pose>0 0 0 0 0 0</pose> <!-- Relative pose of child wrt parent joint frame -->
    </joint>
    <!-- TODO: Add Gazebo Harmonic compatible plugins for controlling steering, rear wheel drive, and turntable joint -->
    <!-- Example for joint controller (needs to be configured correctly with topics) -->
    <!--
    <plugin filename="gz-sim-joint-controller-system"
      name="gz::sim::systems::JointController">
      <joint_name>turntable_joint</joint_name>
    </plugin>
    <plugin filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
    </plugin>
    -->
  </model>
</sdf> 